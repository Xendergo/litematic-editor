//! A library that lets you read, edit, create, and write schematics generated by the minecraft mod <a href="https://github.com/maruohon/litematica" target="_blank">litematica</a>
//!
//! ```
//! use std::fs;
//!
//! use litematic_editor::{BlockState, Schematic};
//!
//! fn main() {
//!     // Read a schematic's file data
//!     let data = fs::read("test/path/to/schematic.litematic").unwrap();
//!
//!     // Convert the data into an easy to deal with `Schematic` type
//!     let mut schematic = Schematic::from_buffer(&mut data.as_slice()).unwrap();
//!
//!     // Iterate over all the regions in the schematic
//!     for (_, region) in schematic.regions.iter_mut() {
//!         let mut blocks_to_change = Vec::new();
//!
//!         // Iterate over all the blocks in the region and mark every stone block in every third layer to be turned into stone bricks
//!         for (pos, state) in region.blocks().iter() {
//!             if state == &BlockState::new("stone", None) && pos.y % 3 == 0 {
//!                 blocks_to_change.push(*pos);
//!             }
//!         }
//!         
//!         // Turn the chosen blocks into stone bricks
//!         for block in blocks_to_change {
//!             region.set_block(block, BlockState::new("stone_bricks", None));
//!         }
//!     }
//!
//!     // Convert the modified schematic into a u8 vector
//!     let modified_data = schematic.to_buffer();
//!
//!     // Write the new schematic to a new litematic file
//!     fs::write("test/path/to/schematic-modified.litematic", modified_data).unwrap();
//! }
//! ```

#![deny(rustdoc::broken_intra_doc_links)]
#![deny(rustdoc::private_intra_doc_links)]
#![warn(missing_docs)]

mod block_state;
mod error;
mod region;
mod schematic;
mod vector;
mod volume;

pub use block_state::BlockState;
pub use error::{BlockStateParseError, LitematicParseError, RegionParseError};
pub use region::Region;
pub use schematic::Schematic;
pub use vector::{FVector3, IVector3, UVector3, Vector3};
pub use volume::Volume;
